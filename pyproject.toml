[tool.poetry]
name = "FastAPi, CloudRun, PubSub"
version = "0.1.0"
description = "FastAPI, CloudRun, PubSub -> Python API and background workers on Google Cloud Platform"
authors = ["Tobiasz KÄ™dzierski <tobiasz.kedzierski@gmail.com>"]
readme = "README.md"
packages = []

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "*"
google-cloud-datastore = "^2"
google-cloud-pubsub = "^2"
google-cloud-storage = "^2"
httpx = "^0.24.1"
loguru = "^0.7.0"
pillow = "^10.0.0"
pydantic = {extras = ["dotenv"], version = "*"}
pydantic-settings = "*"
python-multipart = "^0.0.6"
uvicorn = "*"

[tool.poetry.group.dev.dependencies]
bandit = {extras = ["toml"], version = "*"}
black = "*"
factory-boy = "*"
gevent = "*"
ipdb = "*"
isort = "*"
mypy = "*"
pre-commit = "*"
pytest = "*"
pytest-asyncio = "*"
pytest-cov = "*"
pytest-env = "*"
pytest-random-order = "*"
pytest-socket = "*"
requests-toolbelt = "*"
respx = "*"
ruff = "*"

[tool.poetry.group.docs.dependencies]
diagrams = "*"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
select = [
    "ANN",  # flake8-annotations
    "B",    # flake8-bugbear
    "BLE",  # flake8-blind-except
    "C4",   # flake8-comprehensions
    "C90",  # mccabe
    "COM",  # flake8-commas
    "DTZ",  # flake8-datetimez
    "E",    # pycodestyle
    "EM",   # flake8-errmsg
    "ERA",  # eradicate
    "EXE",  # flake8-executable
    "F",    # Pyflakes
    "FBT",  # flake8-boolean-trap
    "G",    # flake8-logging-format
    "INP",  # flake8-no-pep420
    "ISC",  # flake8-implicit-str-concat
    "N",    # pep8-naming
    "PGH",  # pygrep-hooks
    "PIE",  # flake8-pie
    "PL",   # pylint
    "PT",   # flake8-pytest-style
    "PTH",  # flake8-use-pathlib
    "Q",    # flake8-quotes
    "RET",  # flake8-return
    "RSE",  # flake8-raise
    "RUF",  # ruff-specific rules
    "S",    # flake8-bandit
    "SIM",  # flake8-simplify
    "T10",  # flake8-debugger
    "T20",  # flake8-print
    "TCH",  # flake8-type-checking
    "TID",  # flake8-tidy-imports
    "UP",   # pyupgrade
    "W",    # pycodestyle
]
ignore = [
    "ANN002",   # Missing type annotation for *args
    "ANN003",   # Missing type annotation for **kwargs
    "ANN101",   # Missing type annotation for self in method
    "ANN102",   # Missing type annotation for cls in classmethod
    "ANN401",   # Dynamically typed expressions (typing.Any) are disallowed
    "EXE002",   # The file is executable but no shebang is present
]
target-version = "py311"
line-length = 120

[tool.ruff.flake8-bugbear]
extend-immutable-calls = [
    "fastapi.Depends",
    "fastapi.Header",
    "fastapi.Query",
    "fastapi.Security",
]

[tool.ruff.per-file-ignores]
"migrations/*" = [
    "INP001",   # File {filename} is part of an implicit namespace package. Add an __init__.py.
]
"tests/*" = [
    "PLR0913",  # Too many arguments to function call
    "PLR2004",  # Magic value used in comparison
    "S101",     # Use of assert detected
    "S105",     # Possible hardcoded password
    "S106",     # Possible hardcoded password
]

[tool.black]
line-length = 120

[tool.mypy]
ignore_missing_imports = true
plugins = "pydantic.mypy"

[tool.isort]
profile = "black"
line_length = 120
force_single_line = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
addopts = """
    --random-order
    --disable-socket
    --allow-hosts=database,::1
    --allow-unix-socket
"""

[tool.bandit]
exclude_dirs = ["tests"]
